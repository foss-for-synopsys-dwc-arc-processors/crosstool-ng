name: Build ARC toolchains

on:
  workflow_call:
    inputs:
      samples:
        description: Stringified JSON list of samples
        required: true
        type: string
      canadian-cross:
        description: Build Canadian Cross toolchain
        default: false
        required: false
        type: boolean
      release-suffix:
        description: Release suffix string
        required: true
        type: string


jobs:
  build:
    runs-on: ${{ matrix.host }}
    strategy:
      fail-fast: false
      matrix:
        sample: ${{ fromJSON(inputs.samples) }}
        host: [ "ubuntu-18.04" ]
    steps:
      - name: download ct-ng
        uses: actions/download-artifact@v2
        with:
          name: crosstool.${{ matrix.host }}
      - name: extract ct-ng
        run: |
          tar -xf ct-ng.tar
      - name: download tarballs
        uses: actions/download-artifact@v2
        with:
          name: src.tar
      - name: extract tarballs
        run: |
          tar -xvf src.tar
      - name: prereq Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y gperf help2man libtool-bin
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH

      - name: select download name for cross-build tarball
        if: inputs.canadian-cross
        run: |
          case ${{ matrix.sample }} in
              *"win"* )
                echo "DOWNLOAD_PREFIX=x86_64-w64-mingw32" >> $GITHUB_ENV ;;
              *"arc64"*"native"* )
                echo "DOWNLOAD_PREFIX=arc64-snps-linux-gnu" >> $GITHUB_ENV ;;
              *"native"* )
                echo "DOWNLOAD_PREFIX=arc32-snps-linux-gnu" >> $GITHUB_ENV ;;
          esac
      - name: download ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }} tarball
        if: inputs.canadian-cross
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }}.tar.gz
      - name: install ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }} toolchain
        if: inputs.canadian-cross
        run: |
          mkdir -p ${{ github.workspace }}/${{ env.DOWNLOAD_PREFIX }}
          tar -C ${{ github.workspace }}/${{ env.DOWNLOAD_PREFIX }} \
              -xzf ${{ env.DOWNLOAD_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }}.tar.gz
          echo "${{ github.workspace }}/${{ env.DOWNLOAD_PREFIX }}/bin" >> $GITHUB_PATH

      - name: Get osxcross sources
        if: contains(matrix.sample, 'macos')
        uses: actions/checkout@v2
        with:
          repository: tpoechtrager/osxcross
          path: './osxcross'
      - name: Build OSXcross toolchain
        if: contains(matrix.sample, 'macos')
        run: |
          sudo apt-get install clang cmake libssl-dev lzma-dev libxml2-dev zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev
          pushd osxcross
            UNATTENDED=1 ./build.sh
            GCC_VERSION=11.2.0 ./build_gcc.sh
            BINUTILS_VERSION=2.37 GDB_VERSION=10.2 ./build_binutils.sh
          popd
          echo "${{ github.workspace }}/osxcross/target/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/osxcross/target/binutils/bin" >> $GITHUB_PATH

      - name: build ${{ matrix.sample }} for ${{ matrix.host }}
        run: |
          mkdir -p src
          ct-ng ${{ matrix.sample }}
          sed -i -e '/CT_LOG_PROGRESS_BAR/s/y$/n/' .config
          sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
          sed -i -e '/CT_PREFIX_DIR/s/HOME/CT_TOP_DIR/' .config
          ct-ng build

      - name: set tarball prefixes to environment variables
        run: |
          case ${{ matrix.sample }} in
              *"arc64"* )
                  ARCH="arc64" ;;
              *"arceb"* )
                  ARCH="arceb" ;;
              * )
                  ARCH="arc" ;;
          esac
          case ${{ matrix.sample }} in
              *"uclibc"* )
                  TOOLCHAIN_FOLDER="${ARCH}-snps-linux-uclibc" ;;
              *"gnu"* )
                  TOOLCHAIN_FOLDER="${ARCH}-snps-linux-gnu" ;;
              *"elf"* )
                  TOOLCHAIN_FOLDER="${ARCH}-snps-elf" ;;
          esac
          if [[ ${{ matrix.sample }} == 'snps-x86_64-w64-mingw32' ]]; then
            echo "TOOLCHAIN_FOLDER=x86_64-w64-mingw32" >> $GITHUB_ENV
          else
            echo "TOOLCHAIN_FOLDER=${TOOLCHAIN_FOLDER}" >> $GITHUB_ENV
          fi
          sample=${{ matrix.sample }}
          echo "TARBALL_PREFIX=${sample#*-}" >> $GITHUB_ENV

      - name: create ${{ env.TARBALL_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }} tarball
        run: |
          case ${{ matrix.sample }} in
              *"win"* )
                TARGET_DIR="HOST-x86_64-w64-mingw32/${TOOLCHAIN_FOLDER}" ;;
              *"arc64"*"native"* )
                TARGET_DIR="HOST-arc64-snps-linux-gnu/${TOOLCHAIN_FOLDER}" ;;
              *"native"* )
                TARGET_DIR="HOST-arc-snps-linux-gnu/${TOOLCHAIN_FOLDER}" ;;
              *)
                TARGET_DIR="${TOOLCHAIN_FOLDER}" ;;
          esac
          tar -C ${{ github.workspace }}/x-tools/${TARGET_DIR} \
              -czf ${{ env.TARBALL_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }}.tar.gz .

      - name: upload ${{ env.TARBALL_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }} tarball
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARBALL_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }}.tar.gz
          path: |
            ${{ env.TARBALL_PREFIX }}.${{ matrix.host }}.${{ inputs.release-suffix }}.tar.gz
      - name: upload log
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.sample }}.${{ matrix.host }}.${{ inputs.release-suffix }}.log
          path: |
            build.log
            .config
          retention-days: 7
        if: ${{ always() }}
